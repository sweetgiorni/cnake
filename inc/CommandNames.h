#pragma once

#include <list>

static auto CommandNames = {"cmake_minimum_required",
                     "cmake_path",
                     "cmake_policy",
                     "configure_file",
                     "exec_program",
                     "execute_process",
                     "file",
                     "find_file",
                     "find_library",
                     "find_package",
                     "find_path",
                     "find_program",
                     "get_cmake_property",
                     "get_directory_property",
                     "get_filename_component",
                     "get_property",
                     "include",
                     "include_guard",
                     "list",
                     "make_directory",
                     "mark_as_advanced",
                     "math",
                     "message",
                     "option",
                     "cmake_parse_arguments",
                     "separate_arguments",
                     "set",
                     "set_directory_properties",
                     "set_property",
                     "site_name",
                     "string",
                     "unset",
                     "cmake_host_system_information",
                     "cmake_language",
                     "load_cache",
                     "remove",
                     "variable_watch",
                     "write_file",
                     "add_custom_command",
                     "add_custom_target",
                     "add_definitions",
                     "add_dependencies",
                     "add_executable",
                     "add_library",
                     "add_subdirectory",
                     "add_test",
                     "build_command",
                     "create_test_sourcelist",
                     "define_property",
                     "enable_language",
                     "enable_testing",
                     "get_source_file_property",
                     "get_target_property",
                     "get_test_property",
                     "include_directories",
                     "include_regular_expression",
                     "install",
                     "install_files",
                     "install_targets",
                     "link_directories",
                     "project",
                     "set_source_files_properties",
                     "set_target_properties",
                     "set_tests_properties",
                     "subdirs",
                     "target_compile_definitions",
                     "target_compile_features",
                     "target_compile_options",
                     "target_include_directories",
                     "target_link_libraries",
                     "target_link_options",
                     "target_sources",
                     "try_compile",
                     "try_run",
                     "target_precompile_headers",
                     "add_compile_definitions",
                     "add_compile_options",
                     "aux_source_directory",
                     "export",
                     "fltk_wrap_ui",
                     "include_external_msproject",
                     "install_programs",
                     "add_link_options",
                     "link_libraries",
                     "target_link_directories",
                     "qt_wrap_cpp",
                     "qt_wrap_ui",
                     "remove_definitions",
                     "source_group"};